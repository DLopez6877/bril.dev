// Breakpoints
$size-xs: 480px; // Mobile First (portrait phones)
$size-sm: 768px; // Small devices (landscape phones and tablets)
$size-md: 1024px; // Medium devices (tablets and small laptops)
$size-lg: 1280px; // Large devices (laptops and desktops)
$size-xl: 1440px; // Extra-large devices (4K displays)

// Font Weights for Afacad Flux
$font-weight-light: 300;
$font-weight-regular: 400;
$font-weight-medium: 500;
$font-weight-bold: 700;

// Font Sizes for Mobile First (default - portrait phones)
$font-size-h1: 2.5rem; // 40px
$font-size-h2: 2rem; // 32px
$font-size-h3: 1.75rem; // 28px
$font-size-h4: 1.5rem; // 24px
$font-size-h5: 1.25rem; // 20px
$font-size-h6: 1.125rem; // 18px
$font-size-body: 1rem; // 16px for body text
$font-size-small: 0.875rem; // 14px for captions or secondary content
$font-size-xsmall: 0.75rem; // 12px for captions or secondary content

// Line Heights
$line-height-body: 1.8; // Looser for better readability on mobile
$line-height-heading: 1.3; // Tight for headings

// MISC
$mouseDur: 1.6s;

// Base Spacing Scale (using rems)
$spacing-xxs: 0.25rem; // 4px
$spacing-xs: 0.5rem; // 8px
$spacing-sm: 1rem; // 16px
$spacing-md: 1.5rem; // 24px
$spacing-lg: 2rem; // 32px
$spacing-xl: 3rem; // 48px
$spacing-xxl: 4rem; // 64px

// Container Padding/Margin Scale
$container-padding-xs: 1rem; // 16px for mobile first
$container-padding-sm: 2rem; // 32px for small devices
$container-padding-md: 3rem; // 48px for medium devices
$container-padding-lg: 4rem; // 64px for large devices
$container-padding-xl: 5rem; // 80px for extra-large devices

// Gutters (space between elements in grid layouts)
$gutter-xs: 0.5rem; // 8px
$gutter-sm: 1rem; // 16px
$gutter-md: 1.5rem; // 24px
$gutter-lg: 2rem; // 32px

:root {
    // ▓▒░ FONTS
    --font-primary: "Anton", sans-serif;
    --font-secondary: "Sometype Mono", monospace;

    // ▓▒░ HEX
    --green: #A9F43A;
    --blue: #3eb7f8;
    --orange: #e85f2e;
    --dark: #272727;
    --light: #E2E4D0;

    // ▓▒░ RGB
    --green-rgb: 169, 244, 58;
    --blue-rgb: 81, 173, 165;
    --orange-rgb: 248, 110, 1;
    --dark-rgb: 39, 39, 39;
    --light-rgb: 226, 228, 208;

    // ▓▒░ EASINGS
    --ease-in-out: cubic-bezier(0.87, 0, 0.13, 1);
    --ease-in: cubic-bezier();
    --ease-out: cubic-bezier(0.16, 1, 0.3, 1);
    // expoInOutFunc = (x) => {return x===0 ? 0: x===1 ? 1: x < 0.5 ? Math.pow(2, 20 * x - 10) / 2: (2 - Math.pow(2, -20 * x + 10)) / 2;}
    // expoInFunc = (x)=> {return x===0 ? 0: Math.pow(2, 10 * x - 10);}
    // expoOutFunc = (x)=> {return x===1 ? 1: 1 - Math.pow(2, -10 * x);}
}